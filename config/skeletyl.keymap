#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define NUM 1
#define SYM 2
#define FUN 3
#define NAV 4
#define MSE 5
#define MED 6

&lt {
    tapping-term-ms = <300>;
    quick_tap_ms = <200>;
    flavor = "hold-preferred";
};

&caps_word { continue-list = <UNDERSCORE MINUS BACKSPACE DELETE>; };

/ {
    chosen { zmk,matrix_transform = &skeletyl_transform; };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        u_caps_word: u_caps_word {
            compatible = "zmk,behavior-mod-morph";
            label = "u_caps_word";
            #binding-cells = <0>;
            bindings = <&caps_word>, <&kp CAPS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alpha {
            bindings = <
&kp PERIOD  &kp W       &kp F       &kp G        &none    &none      &kp COMMA    &kp UNDERSCORE  &kp J       &kp B
&kp S       &hm LALT C  &hm LGUI N  &hm LCTRL T  &none    &none      &hm LCTRL A  &hm LGUI E      &hm LALT I  &kp H
&none       &kp P       &kp L       &kp D        &none    &none      &kp U        &kp O           &kp Y       &none
                        &none       &kp R        &mo 1    &sk LSHFT  &kp SPACE    &none
            >;
        };

        sym1 {
            bindings = <
&kp EXCL  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp EQUAL    &trans     &trans             &kp SEMICOLON  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp QUESTION
&kp F     &hm LALT A      &hm LGUI Q       &hm LCTRL K  &trans     &trans             &hm LCTRL X    &hm LGUI Z            &hm LALT A             &kp O
&trans    &kp PLUS        &kp ASTERISK     &kp MINUS    &trans     &trans             &kp SLASH      &kp LESS_THAN         &kp GREATER_THAN       &trans
                          &trans           &to 0        &kp SQT    &kp DOUBLE_QUOTES  &mo 2          &trans
            >;
        };

        sym2 {
            bindings = <
&trans     &kp COLON  &kp CARET       &kp PIPE         &trans       &trans  &kp TILDE  &kp LBKT   &kp RBKT   &kp QMARK
&kp LS(F)  &hm LALT LS(A)  &hm LGUI LS(Q)  &hm LCTRL LS(K)  &trans       &trans  &hm LCTRL LS(X)  &hm LCTRL LS(Z)  &hm LALT LS(A)  &kp LS(O)
&trans     &kp HASH   &kp AMPERSAND   &kp DOLLAR       &trans       &trans  &kp BSLH   &kp AT     &trans     &trans
                      &trans          &trans           &kp GRAVE    &trans  &trans     &trans
            >;
        };

        num {
            bindings = <
&trans     &kp BACKSPACE  &kp N5        &kp N6     &trans    &trans     &kp N7     &kp N8   &kp N9  &trans
&kp LC(A)  &hm LALT LC(Z)      &hm LGUI N0  &hm LCTRL N1     &trans    &trans     &hm LCTRL N2     &hm LGUI N3   &hm LALT N4  &trans
&trans     &kp LC(X)      &kp LC(C)     &kp LC(V)  &trans    &trans     &kp COMMA  &kp DOT  &trans  &trans
                          &trans        &trans     &trans    &kp LSHFT  &kp LGUI   &trans
            >;
        };

        sys {
            bindings = <
&trans  &trans   &kp DEL    &kp HOME  &trans    &trans  &trans    &kp BACKSPACE  &trans     &trans
&trans  &hm LALT TAB  &hm LGUI ENTER  &hm LCTRL ESC   &trans    &trans  &hm LCTRL LEFT  &hm LGUI DOWN       &hm LALT UP     &kp RIGHT
&trans  &trans   &trans     &kp END   &trans    &trans  &trans    &kp PG_DN      &kp PG_UP  &trans
                 &trans     &kp LGUI  &mo 5     &trans  &trans    &trans
            >;
        };

        fun {
            bindings = <
&kp F10  &kp F11      &kp F12      &trans        &trans    &trans      &trans        &trans       &trans       &trans
&kp F1   &hm LALT F2  &hm LGUI F3  &hm LCTRL F4  &trans    &trans      &hm LCTRL F6  &hm LGUI F7  &hm LALT F8  &kp F9
&trans   &trans       &trans       &trans        &trans    &trans      &trans        &trans       &trans       &trans
                      &trans       &trans        &trans    &kp LSHIFT  &trans        &trans
            >;
        };
    };
};
