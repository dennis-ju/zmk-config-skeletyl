#include "keys_sv.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define NUM 1
#define SYM 2
#define FUN 3
#define NAV 4
#define MSE 5
#define MED 6

&lt {
    tapping-term-ms = <300>;
    quick_tap_ms = <200>;
    flavor = "hold-preferred";
};

&caps_word { continue-list = <UNDERSCORE MINUS BACKSPACE DELETE>; };

/ {
    chosen { zmk,matrix_transform = &skeletyl_transform; };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        tap_dance_capsword: tap_dance_capsword {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_CAPSWORD";
            #binding-cells = <0>;
            bindings = <&kp SV_COMMA>, <&caps_word>;
        };

        tap_dance_vim_save_exit: tap_dance_vim_save_exit {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_VIM_SAVE_EXIT";
            #binding-cells = <0>;
            bindings = <&kp H>, <&vim_quit>, <&vim_save>, <&vim_save_exit>;
        };

        ltr: ltr {
            compatible = "zmk,behavior-hold-tap";
            label = "LTR";
            bindings = <&mo>, <&key_repeat>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
        };

        htm: htm {
            compatible = "zmk,behavior-hold-tap";
            label = "HTM";
            bindings = <&to>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    macros {
        vim_save_exit: vim_save_exit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp SV_COLON &kp W &kp Q &kp ENTER>;
            label = "VIM_SAVE_EXIT";
            wait-ms = <10>;
            tap-ms = <10>;
        };

        tide_macro: tide_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SV_TILDE &kp SPACE>;
            label = "TIDE_MACRO";
        };

        to_sym1: to_sym1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sl 1>;
            label = "TO_SYM1";
        };

        to_sym2: to_sym2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sl 2>;
            label = "TO_SYM2";
        };

        vim_save: vim_save {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp SV_COLON &kp W &kp ENTER>;
            label = "VIM_SAVE";
            wait-ms = <10>;
            tap-ms = <10>;
        };

        gave_macro: gave_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SV_GRAVE &kp SPACE>;
            label = "GAVE_MACRO";
        };

        vim_quit: vim_quit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp SV_COLON &kp Q &kp ENTER>;
            label = "VIM_QUIT";
            wait-ms = <10>;
            tap-ms = <10>;
        };

        sticky_sym: sticky {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sl 1>;
            label = "STICKY";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alpha1 {
            bindings = <
&kp SV_DOT  &kp W       &tap_dance_vim_save_exit  &kp G         &none       &none     &tap_dance_capsword  &kp SV_UNDER  &kp J       &kp B
&hm LALT S  &hm LGUI C  &hm LCTRL N               &hm LSHIFT T  &kp M       &none     &hm LSHIFT A         &hm LCTRL E   &hm LGUI I  &hm LALT R
&none       &kp P       &kp L                     &lt 3 D       &none       &none     &lt 4 U              &kp O         &kp Y       &none
                        &none                     &sticky_sym   &ltr 5 0    &ltr 8 0  &lt 6 SPACE          &none
            >;
        };

        alpha2 {
            bindings = <
&gave_macro  &kp SV_AMPS    &kp SV_PIPE   &kp SV_EXCL       &none          &none  &kp SV_QUESTION  &kp SV_EQUAL  &kp SV_HASH      &kp SV_BACKSLASH
&kp F        &kp SV_A_RING  &kp Q         &kp K             &tide_macro    &none  &kp V            &kp Z         &kp SV_A_UMLAUT  &kp SV_O_UMLAUT
&none        &kp X          &kp SV_COLON  &kp SV_MINUS      &none          &none  &kp SV_FSLH      &kp SV_SQT    &kp SV_DQT       &none
                            &none         &kp SV_SEMICOLON  &none          &none  &to_sym2         &none
            >;
        };

        alpha2_caps {
            bindings = <
&none      &none      &none      &none      &none    &none  &none      &none      &none      &none
&kp LS(F)  &kp LS(A)  &kp LS(Q)  &kp LS(K)  &none    &none  &kp LS(V)  &kp LS(Z)  &kp LS(A)  &kp LS(O)
&none      &kp LS(X)  &none      &none      &none    &none  &none      &none      &none      &none
                      &none      &none      &none    &none  &none      &none
            >;
        };

        sym_r {
            bindings = <
&none  &none  &none  &none  &none    &none  &kp SV_DOLLAR  &none        &kp SV_SEMI  &kp SV_HASH
&none  &none  &none  &none  &none    &none  &kp SV_LPAR    &kp SV_RPAR  &kp SV_LBKT  &kp SV_RBKT
&none  &none  &none  &none  &none    &none  &kp SV_AT      &kp SV_SQT   &kp SV_DQT   &none
              &none  &none  &none    &none  &none          &none
            >;
        };

        sym_l {
            bindings = <
&none      &kp SV_PLUS  &kp SV_STAR  &kp SV_CARET    &none          &none  &none  &none  &none  &none
&kp SV_LT  &kp SV_GT    &kp SV_LBRC  &kp SV_RBRC     &kp SV_SEMI    &none  &none  &none  &none  &none
&none      &none        &none        &kp SV_PERCENT  &none          &none  &none  &none  &none  &none
                        &none        &none           &none          &none  &none  &none
            >;
        };

        num {
            bindings = <
&none      &kp BACKSPACE  &kp N5     &kp N6     &none    &none  &kp N7        &kp N8      &kp N9  &none
&kp LC(A)  &kp LC(Z)      &kp N0     &kp N1     &none    &none  &kp N2        &kp N3      &kp N4  &none
&none      &kp LC(X)      &kp LC(C)  &kp LC(V)  &none    &none  &kp SV_COMMA  &kp SV_DOT  &none   &none
                          &none      &none      &none    &none  &none         &none
            >;
        };

        sys {
            bindings = <
&none  &none            &kp DEL      &kp HOME  &none       &none  &none     &kp BACKSPACE  &none      &none
&none  &kp TAB          &kp ENTER    &kp ESC   &none       &none  &kp LEFT  &kp DOWN       &kp UP     &kp RIGHT
&none  &kp LC(LS(TAB))  &kp LC(TAB)  &kp END   &none       &none  &sl 7     &kp PG_DN      &kp PG_UP  &none
                        &none        &kp LGUI  &kp LALT    &none  &none     &none
            >;
        };

        fun {
            bindings = <
&kp F10  &kp F11  &kp F12  &none   &none     &none  &none   &none   &none   &none
&kp F1   &kp F2   &kp F3   &kp F4  &kp F5    &none  &kp F6  &kp F7  &kp F8  &kp F9
&none    &none    &none    &none   &none     &none  &none   &none   &none   &none
                  &none    &none   &none     &none  &none   &none
            >;
        };

        wnav {
            bindings = <
&none       &none       &kp ENTER     &kp R          &none         &none  &none         &kp W       &none       &none
&kp LG(N1)  &kp LG(N2)  &kp LG(N3)    &kp LG(N4)     &kp LG(N5)    &none  &kp LG(N6)    &kp LG(N7)  &kp LG(N8)  &kp LG(N9)
&none       &none       &kp LG(LEFT)  &kp LG(RIGHT)  &none         &none  &kp LG(DOWN)  &kp LG(UP)  &none       &none
                        &none         &kp LSHFT      &none         &none  &none         &none
            >;
        };
    };
};
