#include "keys_sv.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define NUM 1
#define SYM 2
#define FUN 3
#define NAV 4
#define MSE 5
#define MED 6

&lt {
    tapping-term-ms = <300>;
    quick_tap_ms = <200>;
    flavor = "hold-preferred";
};

&caps_word { continue-list = <UNDERSCORE MINUS BACKSPACE DELETE>; };

/ {
    chosen { zmk,matrix_transform = &skeletyl_transform; };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        tap_dance_capsword: tap_dance_capsword {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_CAPSWORD";
            #binding-cells = <0>;
            bindings = <&kp SV_COMMA>, <&caps_word>;
        };

        tap_dance_vim_save_exit: tap_dance_vim_save_exit {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_VIM_SAVE_EXIT";
            #binding-cells = <0>;
            bindings =
                <&kp SV_UNDER>,
                <&vim_quit>,
                <&vim_save>,
                <&vim_save_exit>;
        };

        ltr: ltr {
            compatible = "zmk,behavior-hold-tap";
            label = "LTR";
            bindings = <&mo>, <&key_repeat>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
        };

        htm: htm {
            compatible = "zmk,behavior-hold-tap";
            label = "HTM";
            bindings = <&to>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    macros {
        vim_save_exit: vim_save_exit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp SV_COLON &kp W &kp Q &kp ENTER>;
            label = "VIM_SAVE_EXIT";
            wait-ms = <10>;
            tap-ms = <10>;
        };

        tide_macro: tide_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SV_TILDE &kp SPACE>;
            label = "TIDE_MACRO";
        };

        to_sym1: to_sym1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sl 1>;
            label = "TO_SYM1";
        };

        to_sym2: to_sym2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sl 2>;
            label = "TO_SYM2";
        };

        vim_save: vim_save {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp SV_COLON &kp W &kp ENTER>;
            label = "VIM_SAVE";
            wait-ms = <10>;
            tap-ms = <10>;
        };

        gave_macro: gave_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SV_GRAVE &kp SPACE>;
            label = "GAVE_MACRO";
        };

        vim_quit: vim_quit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp SV_COLON &kp Q &kp ENTER>;
            label = "VIM_QUIT";
            wait-ms = <10>;
            tap-ms = <10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alpha {
            bindings = <
&kp SV_DOT  &kp W       &kp H        &kp G         &none    &none        &tap_dance_capsword  &tap_dance_vim_save_exit  &kp J       &kp B
&hm LALT S  &hm LGUI C  &hm LCTRL N  &hm LSHIFT T  &kp M    &none        &hm LSHIFT A         &hm LCTRL E               &hm LGUI I  &hm LALT R
&none       &kp P       &kp L        &kp D         &none    &none        &kp U                &kp O                     &kp Y       &none
                        &none        &sl 1         &sl 3    &key_repeat  &lt 4 SPACE          &none
            >;
        };

        sym1 {
            bindings = <
&kp SV_EXCL  &kp SV_LBRC    &kp SV_RBRC  &kp SV_EQUAL  &trans    &trans      &kp SV_SEMI  &kp SV_LPAR  &kp SV_RPAR      &kp SV_QMARK
&kp F        &kp SV_A_RING  &kp Q        &kp K         &trans    &trans      &kp V        &kp Z        &kp SV_A_UMLAUT  &kp SV_O_UMLAUT
&trans       &kp X          &kp SV_STAR  &kp SV_MINUS  &trans    &trans      &kp SV_FSLH  &kp SV_LT    &kp SV_GT        &trans
                            &trans       &trans        &trans    &kp SV_DQT  &to_sym2     &trans
            >;
        };

        sym2 {
            bindings = <
&kp SV_PRCNT  &kp SV_COLON  &kp SV_CARET  &kp SV_PIPE  &trans         &trans        &tide_macro   &kp SV_LBKT  &kp SV_RBKT  &kp SV_QMARK
&kp LS(F)     &kp LS(A)     &kp LS(Q)     &kp LS(K)    &trans         &trans        &kp LS(V)     &kp LS(Z)    &kp LS(A)    &kp LS(O)
&trans        &kp LS(X)     &kp SV_AMPS   &kp SV_DLLR  &trans         &trans        &kp SV_BSLH   &kp SV_AT    &kp SV_SQT   &trans
                            &trans        &kp SV_PLUS  &kp SV_HASH    &kp SV_GRAVE  &kp SV_COLON  &trans
            >;
        };

        num {
            bindings = <
&trans     &kp BACKSPACE  &kp N5     &kp N6     &trans    &trans     &kp N7        &kp N8      &kp N9  &trans
&kp LC(A)  &kp LC(Z)      &kp N0     &kp N1     &trans    &trans     &kp N2        &kp N3      &kp N4  &trans
&trans     &kp LC(X)      &kp LC(C)  &kp LC(V)  &trans    &trans     &kp SV_COMMA  &kp SV_DOT  &trans  &trans
                          &trans     &trans     &trans    &kp LSHFT  &kp LGUI      &trans
            >;
        };

        sys {
            bindings = <
&trans  &trans           &kp DEL      &kp HOME  &trans    &trans  &trans    &kp BACKSPACE  &trans     &trans
&trans  &kp TAB          &kp ENTER    &kp ESC   &trans    &trans  &kp LEFT  &kp DOWN       &kp UP     &kp RIGHT
&trans  &kp LC(LS(TAB))  &kp LC(TAB)  &kp END   &trans    &trans  &trans    &kp PG_DN      &kp PG_UP  &trans
                         &trans       &kp LGUI  &sl 5     &trans  &trans    &trans
            >;
        };

        fun {
            bindings = <
&kp F10  &kp F11  &kp F12  &trans  &trans    &trans      &trans  &trans  &trans  &trans
&kp F1   &kp F2   &kp F3   &kp F4  &trans    &trans      &kp F6  &kp F7  &kp F8  &kp F9
&trans   &trans   &trans   &trans  &trans    &trans      &trans  &trans  &trans  &trans
                  &trans   &trans  &trans    &kp LSHIFT  &trans  &trans
            >;
        };
    };
};
